{"version":3,"sources":["asset/Github-Small.svg","asset/workslide-img/1.png","asset/workslide-img/2.png","asset/workslide-img/comingsoon.png","components/Skill.js","components/WorkSlide.js","components/Work.js","components/Main.js","App.js","serviceWorker.js","index.js","asset/logo.svg"],"names":["module","exports","Skill","props","paperScaleUp","useRef","pageToWork","skillList","map","skill","i","key","className","ref","id","src","logo","alt","Github","onClick","window","open","current","classList","add","setTimeout","history","push","WorkSlide","workList","bahamas","oldie","comingsoon","work","link","title","desc","stack","year","cover","dragging","renderCenterLeftControls","previousSlide","currentSlide","renderCenterRightControls","nextSlide","slideCount","renderBottomCenterControls","Work","paperScaleDown","pageToSkill","Main","basename","process","exact","path","component","App","styles","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1d9fd1a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Github-Small.a216f666.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.54ca3208.png\";","module.exports = __webpack_public_path__ + \"static/media/2.8f448368.png\";","module.exports = __webpack_public_path__ + \"static/media/comingsoon.d6e438a2.png\";","import React, { useRef } from 'react';\nimport logo from '../asset/logo.svg';\nimport Github from '../asset/Github-Small.svg';\n\nconst Skill = (props) => {\n    const paperScaleUp = useRef(null);\n    const pageToWork = useRef(null);\n\n    const toWork = () => {\n        pageToWork.current.classList.add('fadeOut');\n        paperScaleUp.current.classList.add('scaleUp');\n        setTimeout(() => {\n            props.history.push('/work')\n        }, 1000);\n    }\n\n    const toGithub = () => {\n        window.open('https://github.com/nwh20', '_blank');\n    }\n\n    const skills = [ 'JavaScript + ES6+ ', 'React.js ', 'JQuery ', 'HTML5 & CSS3 ', '...' ];\n    const skillList = skills.map((skill, i) =>\n        <li key={i}>{skill}</li>\n    )\n\n    return (\n        <>\n            <div className=\"paperSkill\" ref={paperScaleUp}>\n                <div id=\"logo\"><img src={logo} alt=\"namwonheo\"></img></div>\n                <div id=\"skillBox\" className=\"fadeIn\" ref={pageToWork}>\n                    <h1>Frontend Developer</h1>\n                    <p>Studied fine art &amp; art marketing in South Korea and France. \n                        Certified in frontend development from the Korean national course programme. \n                        Previously worked as a junior frontend developer for Korea General Construction Technology. \n                        Strong passion for acquiring new frontend skills and I am still learning every day. \n                        Check out what I'm interested in!\n                    </p>\n                    <ul>{skillList}</ul>\n                    <br />\n                    <div className=\"skillBottomLeft\">\n                        <img src={Github} alt=\"githublogo\" id=\"githubLogo\" onClick={toGithub} />\n                        <span>hnamwon@gmail.com</span>\n                    </div>\n                    <div className=\"skillBottomRight\">\n                        <span className=\"btnToWork\" onClick={toWork}>work &rarr;</span>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Skill;","import React from 'react';\nimport Carousel from 'nuka-carousel';\nimport bahamas from '../asset/workslide-img/1.png';\nimport oldie from '../asset/workslide-img/2.png';\nimport comingsoon from '../asset/workslide-img/comingsoon.png';\n\nconst WorkSlide = () => {\n    const list = [\n        {\n            \"index\": 1,\n            \"id\": \"bahamas\",\n            \"title\": \"Korean Air Event\",\n            \"desc\": \"Single page web & mobile\",\n            \"stack\": \"JavaScript\",\n            \"year\": 2019,\n            \"link\": \"https://nwh20.github.io/ka-eventpage/main.html\",\n            \"cover\": bahamas\n        },\n        {\n            \"index\": 2,\n            \"id\": \"oldie\",\n            \"title\": \"Oldie The Camera\",\n            \"desc\": \"Website with Ebay API & CRUD board \",\n            \"stack\": \"React, Styled-Component, Axios\",\n            \"year\": 2020,\n            \"link\": \"https://otc-react.herokuapp.com\",\n            \"cover\": oldie\n        },\n        {\n            \"index\": 3,\n            \"id\": \"comingsoon\",\n            \"title\": \"\",\n            \"desc\": \"\",\n            \"stack\": \"\",\n            \"year\": null,\n            \"link\": \"\",\n            \"cover\": comingsoon\n             // cover s~ize 700x450, bgr white, design range 500x450\n        },\n    ]\n    \n    const workList = list.map((work, i) => \n        <div key={i} className=\"workPage\" id={work.id}>\n            <div className=\"workTxt\" onClick={ () => {\n                window.open(work.link, '_blank');\n            }}>\n                <div className=\"workTxt-wrap\">\n                    <h3>{work.title}</h3>\n                    <p>{work.desc}</p>\n                    <p>{work.stack}</p>\n                    <p>{work.year}</p>\n                </div>\n            </div>\n            <img src={work.cover} alt=\"workImg\" className=\"workImg\" />\n        </div>\n    );\n\n    const prevBtn = ( {previousSlide, currentSlide} ) => (\n        currentSlide !== 0 ?\n        <button onClick={previousSlide} id=\"prev\">&lt;</button>\n        : ''\n    )\n    \n    const nextBtn = ( {nextSlide, slideCount, currentSlide} ) => (\n        currentSlide !== slideCount - 1 ?\n        <button onClick={nextSlide} id=\"next\">&gt;</button>\n        : ''\n    )\n\n    return (\n        <>\n            <Carousel\n            dragging={false}\n            renderCenterLeftControls={prevBtn}\n            renderCenterRightControls={nextBtn}\n            renderBottomCenterControls={() => (null)}\n            >\n                {workList}\n            </Carousel>\n        </>\n    )\n}\n\n\nexport default WorkSlide;","import React, { useRef } from 'react';\nimport logo from '../asset/logo.svg';\nimport WorkSlide from './WorkSlide';\n\nconst Work = (props) => {\n    const paperScaleDown = useRef(null);\n    const pageToSkill = useRef(null);\n    \n    const toSkill = () => {\n        pageToSkill.current.classList.add('fadeOut');\n        paperScaleDown.current.classList.add('scaleDown');\n        setTimeout(() => {\n            props.history.push('/')\n        }, 1000);\n    }\n\n    return (\n        <>\n            <div className=\"paperWork\" ref={paperScaleDown}>\n                <div id=\"logo\"><img src={logo} alt=\"namwonheo\"></img></div>\n                <div id=\"workBox\" className=\"fadeIn\" ref={pageToSkill}>\n                    <div className=\"btnToSkill\" onClick={toSkill}>main</div>\n                    <div className=\"workSlide\"><WorkSlide /></div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Work;","import React from 'react';\nimport Skill from './Skill';\nimport Work from './Work';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nconst Main = () => {\n    return (\n        <div className=\"main\">\n            <div className=\"wrap\">\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <Route exact path=\"/\" component={Skill} />\n                    <Route exact path=\"/work\" component={Work} />\n                </BrowserRouter>\n            </div>\n        </div>\n    );\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport Main from './components/Main';\nimport styles from './App.css'\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className={styles}>\n                <Main />\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.a5683ae8.svg\";"],"sourceRoot":""}